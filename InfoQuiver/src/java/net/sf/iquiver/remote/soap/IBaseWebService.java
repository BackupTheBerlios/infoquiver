

package net.sf.iquiver.remote.soap;

import java.util.List;
import java.util.Map;
import org.apache.torque.om.SimpleKey;

/**
 * The skeleton for this class was autogenerated by Torque on: [Sat Apr 03 15:42:57 CEST 2004]
 */
public interface IBaseWebService
{

    public net.sf.iquiver.om.User doSelectUser(net.sf.iquiver.om.User object);

    public List doSelectUser(Map criteria);

    public net.sf.iquiver.om.User retrieveUserByPk(SimpleKey key);

    public net.sf.iquiver.om.User doInsertUser(net.sf.iquiver.om.User object);

    public void doDeleteUser(net.sf.iquiver.om.User object);

    public void doDeleteUser(Map criteria);

    public net.sf.iquiver.om.Client doSelectClient(net.sf.iquiver.om.Client object);

    public List doSelectClient(Map criteria);

    public net.sf.iquiver.om.Client retrieveClientByPk(SimpleKey key);

    public net.sf.iquiver.om.Client doInsertClient(net.sf.iquiver.om.Client object);

    public void doDeleteClient(net.sf.iquiver.om.Client object);

    public void doDeleteClient(Map criteria);

    public net.sf.iquiver.om.Address doSelectAddress(net.sf.iquiver.om.Address object);

    public List doSelectAddress(Map criteria);

    public net.sf.iquiver.om.Address retrieveAddressByPk(SimpleKey key);

    public net.sf.iquiver.om.Address doInsertAddress(net.sf.iquiver.om.Address object);

    public void doDeleteAddress(net.sf.iquiver.om.Address object);

    public void doDeleteAddress(Map criteria);

    public net.sf.iquiver.om.UserGroup doSelectUserGroup(net.sf.iquiver.om.UserGroup object);

    public List doSelectUserGroup(Map criteria);

    public net.sf.iquiver.om.UserGroup retrieveUserGroupByPk(SimpleKey key);

    public net.sf.iquiver.om.UserGroup doInsertUserGroup(net.sf.iquiver.om.UserGroup object);

    public void doDeleteUserGroup(net.sf.iquiver.om.UserGroup object);

    public void doDeleteUserGroup(Map criteria);

    public net.sf.iquiver.om.UserGroupLnk doSelectUserGroupLnk(net.sf.iquiver.om.UserGroupLnk object);

    public List doSelectUserGroupLnk(Map criteria);

    public net.sf.iquiver.om.UserGroupLnk retrieveUserGroupLnkByPk(SimpleKey key);

    public net.sf.iquiver.om.UserGroupLnk doInsertUserGroupLnk(net.sf.iquiver.om.UserGroupLnk object);

    public void doDeleteUserGroupLnk(net.sf.iquiver.om.UserGroupLnk object);

    public void doDeleteUserGroupLnk(Map criteria);

    public net.sf.iquiver.om.UserGroupClientLnk doSelectUserGroupClientLnk(net.sf.iquiver.om.UserGroupClientLnk object);

    public List doSelectUserGroupClientLnk(Map criteria);

    public net.sf.iquiver.om.UserGroupClientLnk retrieveUserGroupClientLnkByPk(SimpleKey key);

    public net.sf.iquiver.om.UserGroupClientLnk doInsertUserGroupClientLnk(net.sf.iquiver.om.UserGroupClientLnk object);

    public void doDeleteUserGroupClientLnk(net.sf.iquiver.om.UserGroupClientLnk object);

    public void doDeleteUserGroupClientLnk(Map criteria);

    public net.sf.iquiver.om.Transport doSelectTransport(net.sf.iquiver.om.Transport object);

    public List doSelectTransport(Map criteria);

    public net.sf.iquiver.om.Transport retrieveTransportByPk(SimpleKey key);

    public net.sf.iquiver.om.Transport doInsertTransport(net.sf.iquiver.om.Transport object);

    public void doDeleteTransport(net.sf.iquiver.om.Transport object);

    public void doDeleteTransport(Map criteria);

    public net.sf.iquiver.om.TransportAttribute doSelectTransportAttribute(net.sf.iquiver.om.TransportAttribute object);

    public List doSelectTransportAttribute(Map criteria);

    public net.sf.iquiver.om.TransportAttribute retrieveTransportAttributeByPk(SimpleKey key);

    public net.sf.iquiver.om.TransportAttribute doInsertTransportAttribute(net.sf.iquiver.om.TransportAttribute object);

    public void doDeleteTransportAttribute(net.sf.iquiver.om.TransportAttribute object);

    public void doDeleteTransportAttribute(Map criteria);

    public net.sf.iquiver.om.ClientTransportLnk doSelectClientTransportLnk(net.sf.iquiver.om.ClientTransportLnk object);

    public List doSelectClientTransportLnk(Map criteria);

    public net.sf.iquiver.om.ClientTransportLnk retrieveClientTransportLnkByPk(SimpleKey key);

    public net.sf.iquiver.om.ClientTransportLnk doInsertClientTransportLnk(net.sf.iquiver.om.ClientTransportLnk object);

    public void doDeleteClientTransportLnk(net.sf.iquiver.om.ClientTransportLnk object);

    public void doDeleteClientTransportLnk(Map criteria);

    public net.sf.iquiver.om.Permission doSelectPermission(net.sf.iquiver.om.Permission object);

    public List doSelectPermission(Map criteria);

    public net.sf.iquiver.om.Permission retrievePermissionByPk(SimpleKey key);

    public net.sf.iquiver.om.Permission doInsertPermission(net.sf.iquiver.om.Permission object);

    public void doDeletePermission(net.sf.iquiver.om.Permission object);

    public void doDeletePermission(Map criteria);

    public net.sf.iquiver.om.ClientPermissionLnk doSelectClientPermissionLnk(
            net.sf.iquiver.om.ClientPermissionLnk object);

    public List doSelectClientPermissionLnk(Map criteria);

    public net.sf.iquiver.om.ClientPermissionLnk retrieveClientPermissionLnkByPk(SimpleKey key);

    public net.sf.iquiver.om.ClientPermissionLnk doInsertClientPermissionLnk(
            net.sf.iquiver.om.ClientPermissionLnk object);

    public void doDeleteClientPermissionLnk(net.sf.iquiver.om.ClientPermissionLnk object);

    public void doDeleteClientPermissionLnk(Map criteria);

    public net.sf.iquiver.om.UserGroupPermissionLnk doSelectUserGroupPermissionLnk(
            net.sf.iquiver.om.UserGroupPermissionLnk object);

    public List doSelectUserGroupPermissionLnk(Map criteria);

    public net.sf.iquiver.om.UserGroupPermissionLnk retrieveUserGroupPermissionLnkByPk(SimpleKey key);

    public net.sf.iquiver.om.UserGroupPermissionLnk doInsertUserGroupPermissionLnk(
            net.sf.iquiver.om.UserGroupPermissionLnk object);

    public void doDeleteUserGroupPermissionLnk(net.sf.iquiver.om.UserGroupPermissionLnk object);

    public void doDeleteUserGroupPermissionLnk(Map criteria);

    public net.sf.iquiver.om.ContentSourceType doSelectContentSourceType(net.sf.iquiver.om.ContentSourceType object);

    public List doSelectContentSourceType(Map criteria);

    public net.sf.iquiver.om.ContentSourceType retrieveContentSourceTypeByPk(SimpleKey key);

    public net.sf.iquiver.om.ContentSourceType doInsertContentSourceType(net.sf.iquiver.om.ContentSourceType object);

    public void doDeleteContentSourceType(net.sf.iquiver.om.ContentSourceType object);

    public void doDeleteContentSourceType(Map criteria);

    public net.sf.iquiver.om.Publisher doSelectPublisher(net.sf.iquiver.om.Publisher object);

    public List doSelectPublisher(Map criteria);

    public net.sf.iquiver.om.Publisher retrievePublisherByPk(SimpleKey key);

    public net.sf.iquiver.om.Publisher doInsertPublisher(net.sf.iquiver.om.Publisher object);

    public void doDeletePublisher(net.sf.iquiver.om.Publisher object);

    public void doDeletePublisher(Map criteria);

    public net.sf.iquiver.om.ContentSource doSelectContentSource(net.sf.iquiver.om.ContentSource object);

    public List doSelectContentSource(Map criteria);

    public net.sf.iquiver.om.ContentSource retrieveContentSourceByPk(SimpleKey key);

    public net.sf.iquiver.om.ContentSource doInsertContentSource(net.sf.iquiver.om.ContentSource object);

    public void doDeleteContentSource(net.sf.iquiver.om.ContentSource object);

    public void doDeleteContentSource(Map criteria);

    public net.sf.iquiver.om.ContentSourceTransportConfig doSelectContentSourceTransportConfig(
            net.sf.iquiver.om.ContentSourceTransportConfig object);

    public List doSelectContentSourceTransportConfig(Map criteria);

    public net.sf.iquiver.om.ContentSourceTransportConfig retrieveContentSourceTransportConfigByPk(SimpleKey key);

    public net.sf.iquiver.om.ContentSourceTransportConfig doInsertContentSourceTransportConfig(
            net.sf.iquiver.om.ContentSourceTransportConfig object);

    public void doDeleteContentSourceTransportConfig(net.sf.iquiver.om.ContentSourceTransportConfig object);

    public void doDeleteContentSourceTransportConfig(Map criteria);

    public net.sf.iquiver.om.ContentParser doSelectContentParser(net.sf.iquiver.om.ContentParser object);

    public List doSelectContentParser(Map criteria);

    public net.sf.iquiver.om.ContentParser retrieveContentParserByPk(SimpleKey key);

    public net.sf.iquiver.om.ContentParser doInsertContentParser(net.sf.iquiver.om.ContentParser object);

    public void doDeleteContentParser(net.sf.iquiver.om.ContentParser object);

    public void doDeleteContentParser(Map criteria);

    public net.sf.iquiver.om.ContentType doSelectContentType(net.sf.iquiver.om.ContentType object);

    public List doSelectContentType(Map criteria);

    public net.sf.iquiver.om.ContentType retrieveContentTypeByPk(SimpleKey key);

    public net.sf.iquiver.om.ContentType doInsertContentType(net.sf.iquiver.om.ContentType object);

    public void doDeleteContentType(net.sf.iquiver.om.ContentType object);

    public void doDeleteContentType(Map criteria);

    public net.sf.iquiver.om.Content doSelectContent(net.sf.iquiver.om.Content object);

    public List doSelectContent(Map criteria);

    public net.sf.iquiver.om.Content retrieveContentByPk(SimpleKey key);

    public net.sf.iquiver.om.Content doInsertContent(net.sf.iquiver.om.Content object);

    public void doDeleteContent(net.sf.iquiver.om.Content object);

    public void doDeleteContent(Map criteria);

    public net.sf.iquiver.om.ClientContentLnk doSelectClientContentLnk(net.sf.iquiver.om.ClientContentLnk object);

    public List doSelectClientContentLnk(Map criteria);

    public net.sf.iquiver.om.ClientContentLnk retrieveClientContentLnkByPk(SimpleKey key);

    public net.sf.iquiver.om.ClientContentLnk doInsertClientContentLnk(net.sf.iquiver.om.ClientContentLnk object);

    public void doDeleteClientContentLnk(net.sf.iquiver.om.ClientContentLnk object);

    public void doDeleteClientContentLnk(Map criteria);
}