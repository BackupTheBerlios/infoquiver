package net.sf.iquiver.om;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import java.util.Locale;

import net.sf.iquiver.metaformat.Document;

import org.apache.torque.om.Persistent;

/**
 * The skeleton for this class was autogenerated by Torque on: [Thu Mar 04 20:15:14 CET 2004] You should add additional
 * methods to this class to meet the application requirements. This class will only be generated as long as it does not
 * already exist in the output directory.
 */
public class Content extends net.sf.iquiver.om.BaseContent implements Persistent, Document
{

    /**
     * Creates a new instance of Content out of an already existent instance of Document
     * @param doc the source document
     */
    public Content(Document doc)
    {
        this.setName( doc.getName() );
        this.setAuthor( doc.getAuthor() );
        this.setTitle( doc.getTitle() );
        this.setDateOfCreation( doc.getDateOfCreation() );
        this.setDateOfLastModification( doc.getDateOfLastModification() );
        this.setShortDescription( doc.getShortDescription() );
        this.setInfoURL( doc.getInfoURL() );
        this.setLocale( doc.getLocale() );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getName()
     */
    public String getName()
    {
        return getContentName();
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setName(java.lang.String)
     */
    public void setName( String name )
    {
        setContentName( name );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getAuthor()
     */
    public String getAuthor()
    {
        return getContentAuthor();
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setAuthor(java.lang.String)
     */
    public void setAuthor( String author )
    {
        setContentAuthor( author );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getTitle()
     */
    public String getTitle()
    {
        return getContentTitle();
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setTitle(java.lang.String)
     */
    public void setTitle( String title )
    {
        setContentTitle( title );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getDateOfCreation()
     */
    public Date getDateOfCreation()
    {
        return getContentDateOfCreation();
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setDateOfCreation(java.util.Date)
     */
    public void setDateOfCreation( Date date )
    {
        setContentDateOfCreation( date );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getDateOfLastModification()
     */
    public Date getDateOfLastModification()
    {
        return getContentDateOfLastModification();
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setDateOfLastModification(java.util.Date)
     */
    public void setDateOfLastModification( Date date )
    {
        setDateOfLastModification( date );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getShortDescription()
     */
    public String getShortDescription()
    {
        return getContentShortDescription();
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setShortDescription(java.lang.String)
     */
    public void setShortDescription( String desc )
    {
        setContentShortDescription( desc );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getInfoURL()
     */
    public URL getInfoURL()
    {
        URL url = null;

        if (getContentInfoUrl() != null)
        {
            try
            {
                url = new URL( getContentInfoUrl() );
            }
            catch ( MalformedURLException e )
            {
            }
        }

        return url;
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setInfoURL(java.net.URL)
     */
    public void setInfoURL( URL url )
    {
        setContentInfoUrl( url.toString() );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getLocale()
     */
    public Locale getLocale()
    {
        Locale locale = null;
        if (getContentLocale() != null)
        {
            locale = new Locale( getContentLocale() );
        }

        return locale;
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#setLocale(java.util.Locale)
     */
    public void setLocale( Locale locale )
    {
        setContentLocale( locale.toString() );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getRawContent()
     */
    public byte[] getRawContent()
    {
        if (getContentContent() != null)
        {
            return getContentContent().getBytes();
        }

        return null;
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#clear()
     */
    public void clear()
    {
        this.setContentAuthor( null );
        this.setContentContent( null );
        this.setContentDateOfCreation( null );
        this.setContentDateOfLastModification( null );
        this.setContentInfoUrl( null );
        this.setContentLocale( null );
        this.setContentName( null );
        this.setContentShortDescription( null );
        this.setContentTitle( null );
    }

    /*
     * (non-Javadoc)
     * 
     * @see net.sf.iquiver.metaformat.Document#getEncoding()
     */
    public String getEncoding()
    {
        return "UTF-8";
    }
}