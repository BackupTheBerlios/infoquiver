/*********************************************************************
 * User.java
 * created on 12.06.2004 by netseeker
 * $Source: /home/xubuntu/berlios_backup/github/tmp-cvs/infoquiver/Repository/InfoQuiver/src/java/net/sf/iquiver/om/User.java,v $
 * $Date: 2004/11/28 13:26:07 $
 * $Revision: 1.8 $
 *********************************************************************/

package net.sf.iquiver.om;

import java.util.List;

import net.sf.iquiver.IQuiver;
import net.sf.iquiver.report.IReportSource;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;
import org.apache.torque.util.Criteria;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Mon Jul 12 19:24:20 CEST 2004]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public class User extends net.sf.iquiver.om.BaseUser implements Persistent, IReportSource
{

    /* (non-Javadoc)
     * @see net.sf.iquiver.report.IReportSource#getSearchQuerys()
     */
    public List getSearchQuerys() throws TorqueException
    {
        return getSearchQuerysRelatedByUserId();
    }

    /* (non-Javadoc)
     * @see net.sf.iquiver.report.IReportSource#getContentSources()
     */
    public List getContentSources() throws TorqueException
    {
        Criteria crit = new Criteria();
        crit.addJoin( ContentSourcePeer.CONTENT_SOURCE_ID, UserGroupContentSourceLnkPeer.CONTENT_SOURCE_ID );
        crit.addJoin( UserGroupContentSourceLnkPeer.USER_GROUP_ID, UserGroupLnkPeer.USER_ID );
        crit.add( UserGroupLnkPeer.USER_ID, this.getUserId() );

        return ContentSourcePeer.doSelect( crit );
    }

    /* (non-Javadoc)
     * @see net.sf.iquiver.util.Introspectable#getMemberNames()
     */
    public List getMemberNames()
    {
        return getFieldNames();
    }

    /* (non-Javadoc)
     * @see net.sf.iquiver.util.Introspectable#getMemberValueByName(java.lang.String)
     */
    public Object getMemberValueByName( String name )
    {
        return getByName( name );
    }

    /**
     * Looks for the prefered language for this user in this order:
     * <ol>
     *  <li>IQ_USER.USER_LANGUAGE</li>
     *  <li>CLIENT.CLIENT_PREFERRED_LANGUAGE</li>
     *  <li>iquiver.properties: <var>default.language</var></li>
     * </ol>
     * @return the iso form of the language to use for all text output for this user
     */
    public String getLanguageRecursive()
    {
        String language = new String( "" );
        try
        {
            language = this.getUserLanguage() != null ? this.getUserLanguage() : this.getClient()
                    .getClientPreferedLanguage() != null ? this.getClient().getClientPreferedLanguage() : IQuiver
                    .getConfiguration().getString( "default.language" );
        }
        catch ( TorqueException e )
        {
            language = IQuiver.getConfiguration().getString( "default.language" );
        }

        return language;
    }    
    
    public List getUserGroupsRelatedByUserGroupLnk() throws TorqueException
    {
        Criteria crit = new Criteria();
        crit.addJoin( UserGroupPeer.USER_GROUP_ID, UserGroupLnkPeer.USER_GROUP_ID );
        crit.add( UserGroupLnkPeer.USER_ID, this.getUserId() );
        
        return UserGroupPeer.doSelect( crit );
    }
}