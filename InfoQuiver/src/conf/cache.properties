# -------------------------------------------------------------------
#
# This is the configuration file for the cache used by IQuiver.
# The cache implementation uses SwarmCache.
# see http://swarmcache.sourceforge.net
# We want to to express our gratitude to John Watkinson - the author of SwarmCache -
# and all contributors of that great, simple in use but powerful cache implementation.
#
# Note that strings containing "," (comma) characters must backslash
# escape the comma (i.e. '\,')
#
# -------------------------------------------------------------------

## cache.type ##
## see http://swarmcache.sourceforge.net/documentation.html for further information
## default value is Hybrid
cache.type = Hybrid
#cache.type = LRU
#cache.type = Auto
#cache.type = Timer


## cache.size ##
## cache size default is 10000, the value is ignored if cache type is set to Auto or Timer
## the cache size is measured in number of objects not bytes!
#cache.size = 10000


## cache.multicast.ip ##
## the multicast IP address that will be used to communicate between cache managers,
## default is 231.12.21.132
#cache.multicast.ip = 231.12.21.132


## cache.enabledAtStartup ##
## should the cache be activated for all objects at startup?
cache.enabledAtStartup = true

## cache.enableCacheForCriteriaSelects ##
## Enables or disables the caching mechanism for caching results of doSelect(Criteria) in cache backed peers.
## Caching of such results is much more complicated than caching results of single selects:
## A second cache - which will store a list of primary keys for each criteria - will be created.
## Each call of one of the doSelect(Criteria,..) signatures will generate a list of primary keys
## of the retrieved objects (one ObjectKey for each object) and store this list in a CriteriaResultListCache.
## Then all retrieved objects will be stored in the main object cache in the same manner as they would be stored
## by single selects.
## Retrieving of object lists with a given criteria is slower than processing a bunch of single selects
## from outside of a peer. This is caused by the overhead of processing the required list of primary keys stored
## in CriteriaResultListCache to retrieve the corresponding cached objects from the main object cache.
## More information on caching of torque generated objects can be found on the homepage of Torque:
## http://db.apache.org/torque/managers-cache.html
## Please note that the cache implementation used by IQuiver differs in mostly all parts from the default cache implementation of Torque.
cache.enableCacheForCriteriaSelects = true

## cache.excludeEnableAtStartUp ##
## Ignore CacheBackedPeers when enabling the cache at startup
## This is a comma separated list of full object type names and/or regexpressions
#cache.excludeEnableAtStartUp = 

## cache.excludeEnableCacheForCriteriaSelects ##
## Ignore CacheBackedPeers when enabling the CriteriaResultListCache at startup
## This is a comma separated list of full object type names and/or regexpressions
#cache.excludeEnableCacheForCriteriaSelects = 